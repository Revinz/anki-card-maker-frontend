[{"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\App.tsx":"1","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\listchips\\ItemChip\\ItemChip.tsx":"2","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\index.tsx":"3","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\sortablelist\\SortableChipList.tsx":"4","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\pages\\Main\\MainPage.tsx":"5","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\dropdown\\DropDown.tsx":"6","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\dropdown\\SelectedValuesField\\SelectedValuesField.tsx":"7","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\dropdown\\SelectionMenu\\CheckboxMenu.tsx":"8","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\section\\section.tsx":"9"},{"size":395,"mtime":1608404032857,"results":"10","hashOfConfig":"11"},{"size":928,"mtime":1608808568150,"results":"12","hashOfConfig":"11"},{"size":552,"mtime":1608658209424,"results":"13","hashOfConfig":"11"},{"size":2124,"mtime":1608808571868,"results":"14","hashOfConfig":"11"},{"size":2084,"mtime":1608812049710,"results":"15","hashOfConfig":"11"},{"size":2082,"mtime":1608810652848,"results":"16","hashOfConfig":"11"},{"size":1985,"mtime":1608812119019,"results":"17","hashOfConfig":"11"},{"size":1247,"mtime":1608669853813,"results":"18","hashOfConfig":"11"},{"size":561,"mtime":1608808398498,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xxhw6d",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\App.tsx",[],"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\listchips\\ItemChip\\ItemChip.tsx",[],"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\index.tsx",[],["41","42"],"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\sortablelist\\SortableChipList.tsx",[],"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\pages\\Main\\MainPage.tsx",[],"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\dropdown\\DropDown.tsx",["43"],"import React from \"react\";\r\nimport { SelectableItemProps } from \"./SelectableItem/SelectableItem\";\r\nimport { SelectedValuesField } from \"./SelectedValuesField/SelectedValuesField\";\r\nimport { CheckboxMenu } from \"./SelectionMenu/CheckboxMenu\";\r\nimport \"./DropDown.css\";\r\nimport { title } from \"process\";\r\n\r\ntype DropdownProps = {\r\n  items: SelectableItemProps[];\r\n  title?: string;\r\n  templateText?: String;\r\n};\r\n\r\ntype DropdownState = {\r\n  selectedItems: SelectableItemProps[];\r\n  opened: boolean;\r\n};\r\n\r\nexport default class Dropdown extends React.Component<\r\n  DropdownProps,\r\n  DropdownState\r\n> {\r\n  constructor(props: DropdownProps) {\r\n    super(props);\r\n    this.state = {\r\n      selectedItems: this.getSelectedItems(props.items),\r\n      opened: false,\r\n    };\r\n  }\r\n\r\n  openMenu(e: MouseEvent) {\r\n    this.setState({ opened: !this.state.opened });\r\n  }\r\n\r\n  private getSelectedItems(\r\n    items: SelectableItemProps[]\r\n  ): SelectableItemProps[] {\r\n    const selectedItems = this.props.items.filter((i) => {\r\n      return i.isSelected;\r\n    });\r\n    return selectedItems;\r\n  }\r\n\r\n  updateItems(items: SelectableItemProps[]) {\r\n    this.setState({\r\n      selectedItems: this.getSelectedItems(items),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <label className=\"dropdown-label\">{this.props.title}</label>\r\n        <div className=\"dropdown-selected-box\">\r\n          <SelectedValuesField\r\n            onClick={this.openMenu.bind(this)}\r\n            onSelectChange={this.updateItems.bind(this)}\r\n            templateText={\r\n              this.props.templateText\r\n                ? this.props.templateText\r\n                : \"No options have been selected.\"\r\n            }\r\n            items={this.state.selectedItems}\r\n          />\r\n        </div>\r\n        <div\r\n          className={\"dropdown-menu \" + (this.state.opened ? \"visible\" : \"\")}\r\n        >\r\n          <CheckboxMenu\r\n            items={this.props.items}\r\n            onSelectionChange={this.updateItems.bind(this)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\dropdown\\SelectedValuesField\\SelectedValuesField.tsx",[],"C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\dropdown\\SelectionMenu\\CheckboxMenu.tsx",["44"],"import React, { ChangeEvent, SyntheticEvent } from \"react\";\r\nimport { SelectableItemProps } from \"../SelectableItem/SelectableItem\";\r\nimport \"./CheckboxMenu.css\";\r\n\r\ntype SelectionMenuProps = {\r\n  items: SelectableItemProps[];\r\n  onSelectionChange: (items: SelectableItemProps[]) => void;\r\n};\r\n\r\ntype CheckboxMenuProps = SelectionMenuProps & {};\r\n\r\nexport const CheckboxMenu = (props: CheckboxMenuProps) => {\r\n  const Toggle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    props.items.forEach((item) => {\r\n      if (item.value === e.target.value) {\r\n        item.isSelected = e.target.checked;\r\n      }\r\n    });\r\n\r\n    props.onSelectionChange(props.items);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-checkbox-menu\">\r\n      {props.items.map((i, index) => {\r\n        return (\r\n          <div className=\"checkbox-item\" key={\"item-\" + index}>\r\n            <input\r\n              className=\"checkbox\"\r\n              type=\"checkbox\"\r\n              value={i.value}\r\n              name={i.value}\r\n              id={i.value}\r\n              onChange={(e) => Toggle(e)}\r\n              checked={i.isSelected}\r\n            />\r\n            <label className=\"checkbox-label\">{i.value}</label>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Revinz\\Desktop\\Development\\AnkiCardMaker\\anki-card-maker-frontend\\src\\components\\common\\section\\section.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":15},{"ruleId":"49","severity":1,"message":"53","line":1,"column":30,"nodeType":"51","messageId":"52","endLine":1,"endColumn":44},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'title' is defined but never used.","Identifier","unusedVar","'SyntheticEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]